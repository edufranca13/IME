function matrix = newton_basis(f, df, l, u, p)  for i = 1 : numel (l)    for j = 1: numel (u)      p (i, j) = newton(f, df, l(i) + u(j), 0.5*10^-5, 10);    endfor  endfor  disp (p);endfunctionfunction ans = newton( f, df, x0, tol, nmax )    if nargin == 3        tol = 1e-4;        nmax = 1e3;    elseif nargin == 4        nmax = 1e1;    elseif nargin ~= 5        error('newton: invalid input parameters');    endif        f = inline(f);    df = inline(df);    x(1) = x0 - (f(x0)/df(x0));    ex(1) = abs(x(1)-x0);    k = 2;    while (ex(k-1) >= tol) && (k <= nmax)        x(k) = x(k-1) - (f(x(k-1))/df(x(k-1)));        ex(k) = abs(x(k)-x(k-1));        k = k+1;    endwhile        #nÃ£o converge dentro da tolerancia fornecida    if (k >= nmax)      ans = 0;    else      ans = x(length(x));    endif    endfunctionp = 1;newton_basis('x^4-1', '4*x^3', -2:0.4:2, complex(0, -2:0.4:2), p);